<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itsme.letitgo.personal.recruit.jobposting.model.mapper.SelectJobPostingMapper">
	
	<resultMap type="com.itsme.letitgo.personal.recruit.jobposting.model.dto.SelectJobPostingDTO" id="resultJobPosting">	
		<id property="jobPostNo" column="JOB_POST_NO"/>
		<result property="coMemNo" column="CO_MEM_NO"/>
		<result property="jobPostTitle" column="JOB_POST_TITLE" javaType="string"/>
		<result property="jobPostMinExperience" column="JOB_POST_MIN_EXPERIENCE"/>
		<result property="jobPostMaxExperience" column="JOB_POST_MAX_EXPERIENCE"/>
		<result property="jobPostEnrollDate" column="JOB_POST_ENROLL_DATE"/>
		<result property="jobPostDeadline" column="JOB_POST_DEADLINE"/>
		<result property="jobPostContents" column="JOB_POST_CONTENTS"/>
		<result property="jobPostKinds" column="JOB_POST_KINDS"/>
		<result property="jobNo" column="JOB_NO"/>
		<result property="exposureUseCheck" column="EXPOSURE_USE_CHECK"/>
		<result property="jobPostApplying_kinds" column="JOB_POST_APPLYING_KINDS"/>
		<result property="qualificationRequirements" column="QUALIFICATION_REQUIREMENTS"/>
		<result property="preferentialMatters" column="PREFERENTIAL_MATTERS"/>
		<result property="benefitAndWelfare" column="BENEFIT_AND_WELFARE"/>
		<result property="companyResumeLink" column="COMPANY_RESUME_FORM_LINK"/>
		<result property="memFilePath" column="MEM_FILE_PATH"/>
		<result property="memFileKinds" column="MEM_FILE_KINDS"/>
		
		<association property="coMemberAddInfoDTO" resultMap="resultCoMemberAddInfo"/>
		<association property="jobFieldDTO" resultMap="resultJobField"/>
		<association property="attachmentDTO" resultMap="resultAttachment"/>
		<association property="jobPostingAppHistoryDTO" resultMap="resultAppHistoty"/>
	</resultMap>
	<resultMap type="com.itsme.letitgo.personal.recruit.jobposting.model.dto.JpCoMemberAddInfoDTO" id="resultCoMemberAddInfo">
		<id property="coMemNo" column="CO_MEM_NO"/>
		<result property="coIntro" column="CO_INTRO"/>
		<result property="coNo" column="CO_NO"/>
		<result property="coComName" column="CO_COM_NAME"/>
		<result property="coCeoName" column="CO_CEO_NAME"/>
		<result property="coAddress" column="CO_ADDRESS"/>
		<result property="coPhone" column="CO_PHONE"/>
		<result property="coPax" column="CO_PAX"/>
		<result property="coSectors" column="CO_SECTORS"/>
		<result property="coStatus" column="CO_STATUS"/>
		<result property="coWebsite" column="CO_WEBSITE"/>
	</resultMap>
	<resultMap type="com.itsme.letitgo.personal.recruit.jobposting.model.dto.JpJobFieldDTO" id="resultJobField">
		<id property="jobNo" column="JOB_NO"/>
		<result property="jobName" column="JOB_NAME"/>
	</resultMap>
	<resultMap type="com.itsme.letitgo.personal.recruit.jobposting.model.dto.JpAttachmentDTO" id="resultAttachment">
		<id property="memFileNo" column="MEM_FILE_NO"/>
		<result property="memFileName" column="MEM_FILE_NAME"/>
		<result property="memFileOriginalName" column="MEM_FILE_ORIGINAL_NAME"/>
		<result property="memFilePath" column="MEM_FILE_PATH"/>
		<result property="memFileKinds" column="MEM_FILE_KINDS"/>
		<result property="memNo" column="MEM_NO"/>
	</resultMap>
	<resultMap type="com.itsme.letitgo.personal.recruit.jobposting.model.dto.JpJobPostingAppHistoryDTO" id="resultAppHistoty">
		<id property="jobPostReqNo" column="JOB_POST_REQ_NO"/>
		<result property="jobPostAnsKinds" column="JOB_POST_ANS_KINDS"/>
		<result property="jobPostReqDate" column="JOB_POST_REQ_DATE"/>
		<result property="jobPostAnsDate" column="JOB_POST_ANS_DATE"/>
		<result property="jobPostReqKinds" column="JOB_POST_REQ_KINDS"/>
		<result property="jobPostNo" column="JOB_POST_NO"/>
		<result property="jobPostRejectReason" column="JOB_POST_REJECT_REASON"/>
		
	</resultMap>
	<resultMap type="com.itsme.letitgo.personal.recruit.jobposting.model.dto.JpCoMemberAddInfoDTO" id="resultCompanyAddInfo">
		<id property="coMemNo" column="CO_MEM_NO"/>
		<result property="coIntro" column="CO_INTRO"/>
		<result property="coNo" column="CO_NO"/>
		<result property="coComName" column="CO_COM_NAME"/>
		<result property="coCeoName" column="CO_CEO_NAME"/>
		<result property="coAddress" column="CO_ADDRESS"/>
		<result property="coPhone" column="CO_PHONE"/>
		<result property="coPax" column="CO_PAX"/>
		<result property="coSectors" column="CO_SECTORS"/>
		<result property="coStatus" column="CO_STATUS"/>
	</resultMap>
	
	<resultMap type="com.itsme.letitgo.personal.recruit.jobposting.model.dto.JpSkillsDTO" id="resultJpSkills" >
		<result property="skillsNo" column="SKILLS_NO"/>
		<result property="jobPostNo" column="JOB_POST_NO"/>
		<result property="skillsName" column="SKILLS_NAME"/>
	</resultMap>

	<resultMap type="com.itsme.letitgo.personal.recruit.jobposting.model.dto.JpOwnFormResumeAttachmentDTO" id="자사이력서">

	</resultMap>
	
	<!-- 지원 이력 확인을 위한 resultMap -->
	<resultMap type="com.itsme.letitgo.personal.recruit.jobposting.model.dto.SelectApplyingYnDTO" id="resultApplyngYn">
		<result property="resumeNo" column="RESUME_NO"/>
		<result property="jobPostNo" column="JOB_POST_NO"/>
		<result property="jobPostApplyingStatus" column="JOB_POST_APPLYING_STATUS"/>
		<result property="memNo" column="MEM_NO"/>
	</resultMap> 
	
	<!-- 공고 지원 시 이력서 선택을 위한 이력서 resultMap -->
	<resultMap type="com.itsme.letitgo.personal.recruit.jobposting.model.dto.JpResumeDTO" id="resultResumeForApplying">
		<id property="resumeNo" column="RESUME_NO"/>
		<result property="inMemNo" column="IN_MEM_NO"/>
		<result property="resumeWriteDate" column="RESUME_WRITE_DATE"/>
		<result property="resumeScoutStatus" column="RESUME_SCOUT_STATUS"/>
		<result property="resumeTitle" column="RESUME_TITLE"/>
	</resultMap>
	
	<!-- 북마크 조회 -->
	<resultMap type="com.itsme.letitgo.personal.recruit.jobposting.model.dto.BookmarkDTO" id="bookmarkResultMap">
		<result property="inMemNo" column="IN_MEM_NO"/>
		<result property="jobPostNo" column="JOB_POST_NO"/>
		<result property="coComName" column="CO_COM_NAME"/>
	</resultMap>
	
	<!-- 페이징을 위한 count -->
	<select id="selectJpTotalCount" parameterType="com.itsme.letitgo.personal.recruit.jobposting.model.dto.SelectRequestJobPostingDTO" resultType="_int">
		SELECT /* com.itsme.letitgo.personal.recruit.jobposting.model.mapper.SelectJobPostingMapper#selectJpTotalCount() */
  			   COUNT(DISTINCT JP.JOB_POST_NO)
               FROM TBL_JOB_POSTING JP
               JOIN TBL_CO_MEMBER_ADD_INFO AI ON (JP.CO_MEM_NO = AI.CO_MEM_NO)
               JOIN TBL_JOB_FIELD JF ON (JP.JOB_NO = JF.JOB_NO)
               JOIN TBL_JOB_POSTING_REQ_SKILLS RS ON (JP.JOB_POST_NO = RS.JOB_POST_NO)
               JOIN TBL_SKILLS S ON (S.SKILLS_NO = RS.SKILLS_NO)
		 WHERE JP.JOB_POST_KINDS = '승인된공고'
		   AND JP.JOB_POST_DEADLINE > SYSDATE
	     <if test="skills != null">
		       AND LOWER(S.SKILLS_NAME) LIKE '%' || #{ skills } || '%'
		 </if>
	 	 <if test="jobNo > 0">
	 	   AND JP.JOB_NO = #{ jobNo }
		 </if>
		 <if test="experience > 0">
		   AND #{ experience } BETWEEN JP.JOB_POST_MIN_EXPERIENCE AND JP.JOB_POST_MAX_EXPERIENCE
		 </if>
		 <if test="areaList != null and areaList.size() != 0">
		 <foreach collection="areaList" item="areaList" open="AND(" separator="OR " close=")">
		       AI.CO_ADDRESS LIKE '%' || #{ areaList } || '%'
		 </foreach>
		 </if>
	     ORDER BY JP.JOB_POST_NO
	</select>
	
	<!-- 공고 전체 조회/ 조건조회 -->
	<select id="selectJobPosting" resultMap="resultJobPosting" parameterType="com.itsme.letitgo.personal.recruit.jobposting.model.dto.SelectRequestJobPostingDTO">
		SELECT /* com.itsme.letitgo.personal.recruit.jobposting.model.mapper.SelectJobPostingMapper#selectJobPosting() */
	     	   A.RNUM
  	   		 , A.JOB_POST_NO
  	   		 , A.JOB_POST_TITLE
  	   		 , A.CO_COM_NAME
  	   		 , A.JOB_POST_MIN_EXPERIENCE
  	   		 , A.JOB_POST_MAX_EXPERIENCE
  	   		 , A.JOB_NAME
  	   		 , A.JOB_NO
  	   		 , A.JOB_POST_ENROLL_DATE
  	   		 , A.JOB_POST_DEADLINE
  	   		 , A.JOB_POST_APPLYING_KINDS
  	   		 , A.CO_ADDRESS
  	   		 , A.JOB_POST_CONTENTS
  	   		 , A.JOB_POST_KINDS
  	   		 , A.MEM_FILE_PATH
	      FROM (SELECT 
                       ROWNUM RNUM
                     , B.JOB_POST_NO
                     , B.JOB_POST_TITLE
                     , B.CO_COM_NAME
                     , B.JOB_POST_MIN_EXPERIENCE
                     , B.JOB_POST_MAX_EXPERIENCE
                     , B.JOB_NAME
                     , B.JOB_NO
                     , B.JOB_POST_ENROLL_DATE
                     , B.JOB_POST_DEADLINE
                     , B.JOB_POST_APPLYING_KINDS
                     , B.CO_ADDRESS
                     , B.JOB_POST_CONTENTS
                     , B.JOB_POST_KINDS
                     , B.MEM_FILE_PATH
                  FROM (SELECT
	  						   DISTINCT JP.JOB_POST_NO
		                     , JP.JOB_POST_TITLE
		                     , AI.CO_COM_NAME
		                     , JP.JOB_POST_MIN_EXPERIENCE
		                     , JP.JOB_POST_MAX_EXPERIENCE
		                     , JF.JOB_NAME
		                     , JP.JOB_NO
		                     , JP.JOB_POST_ENROLL_DATE
		                     , JP.JOB_POST_DEADLINE
		                     , JP.JOB_POST_APPLYING_KINDS
		                     , AI.CO_ADDRESS
		                     , JP.JOB_POST_CONTENTS
		                     , JP.JOB_POST_KINDS
		                     , SUBSTR(TA.MEM_FILE_PATH,21) MEM_FILE_PATH
		                  FROM TBL_JOB_POSTING JP
		                  JOIN TBL_CO_MEMBER_ADD_INFO AI ON (JP.CO_MEM_NO = AI.CO_MEM_NO)
		                  JOIN TBL_JOB_FIELD JF ON (JP.JOB_NO = JF.JOB_NO)
		                  JOIN TBL_JOB_POSTING_REQ_SKILLS RS ON (JP.JOB_POST_NO = RS.JOB_POST_NO)
		                  JOIN TBL_SKILLS S ON (S.SKILLS_NO = RS.SKILLS_NO)
		                  LEFT JOIN TBL_ATTACHMENT TA ON(AI.CO_MEM_NO = TA.MEM_NO)
						 WHERE JP.JOB_POST_KINDS = '승인된공고'
						   AND TA.MEM_FILE_KINDS  = '프로필사진'
						   AND JP.JOB_POST_DEADLINE > SYSDATE
		                <if test="skills != null">
		                   AND LOWER(S.SKILLS_NAME) LIKE '%' || #{ skills } || '%'
		                </if>
		                <if test="jobNo > 0">
					       AND JP.JOB_NO = #{ jobNo }
					    </if>
					    <if test="experience > 0">
					       AND #{ experience } BETWEEN JP.JOB_POST_MIN_EXPERIENCE AND JP.JOB_POST_MAX_EXPERIENCE
					    </if>
					    <if test="areaList != null and areaList.size() != 0">
					    <foreach collection="areaList" item="areaList" open="AND(" separator="OR " close=")">
					           AI.CO_ADDRESS LIKE '%' || #{ areaList } || '%'
					    </foreach>
					    </if>
		                 ORDER BY JP.JOB_POST_NO DESC
                  	   ) B
                   <![CDATA[
                   WHERE ROWNUM <= #{ selectCriteria.endRow } 
                   ]]> 
		  	   ) A
		<![CDATA[
 		  WHERE A.RNUM >= #{ selectCriteria.startRow }
 		]]>
		
	</select>
	
	<select id="selectJpSkills" resultMap="resultJpSkills">
		SELECT /* com.itsme.letitgo.personal.recruit.jobposting.model.mapper.SelectJobPostingMapper#selectJpSkills() */
			   RS.JOB_POST_NO
			 , S.SKILLS_NAME
		  FROM TBL_JOB_POSTING_REQ_SKILLS RS
		  JOIN TBL_SKILLS S ON(RS.SKILLS_NO = S.SKILLS_NO)
	</select>
	<!-- 공고 조회시 직무 선택을 위해 조회 -->
	<select id="selectJobNames" resultMap="resultJobField">
		SELECT /* com.itsme.letitgo.personal.recruit.jobposting.model.mapper.SelectJobPostingMapper#selectJobNames() */
			   JF.JOB_NO
			 , JF.JOB_NAME
		  FROM TBL_JOB_FIELD JF
	</select>
	<!-- 공고 조회 시 스킬 선택을 위해 조회 -->
	<select id="selectSkills" resultMap="resultJpSkills">
		SELECT /* com.itsme.letitgo.personal.recruit.jobposting.model.mapper.SelectJobPostingMapper#selectSkills(); */
			   S.SKILLS_NO
			 , S.SKILLS_NAME
		  FROM TBL_SKILLS S
	</select>
	
	<!-- 공고 상세조회 -->
	<select id="selectDetailedJobPosting" parameterType="_int" resultMap="resultJobPosting">
		SELECT /* com.itsme.letitgo.personal.recruit.jobposting.model.mapper.SelectJobPostingMapper#selectDetailedJobPosting(); */
		       JP.CO_MEM_NO
		     , JP.JOB_POST_NO
		     , JP.JOB_POST_TITLE
		     , JP.JOB_POST_MIN_EXPERIENCE
			 , JP.JOB_POST_MAX_EXPERIENCE
		     , JP.JOB_POST_CONTENTS
		     , JP.JOB_POST_ENROLL_DATE
		     , JP.JOB_POST_DEADLINE
		     , JP.QUALIFICATION_REQUIREMENTS
		     , JP.PREFERENTIAL_MATTERS
		     , JP.BENEFIT_AND_WELFARE
		     , AI.CO_ADDRESS
		     , AI.CO_COM_NAME
		     , AI.CO_WEBSITE
		     , JF.JOB_NAME
		  FROM TBL_JOB_POSTING JP
		  JOIN TBL_CO_MEMBER_ADD_INFO AI ON (JP.CO_MEM_NO = AI.CO_MEM_NO)
		  JOIN TBL_JOB_FIELD JF ON(JF.JOB_NO = JP.JOB_NO)
		 WHERE JP.JOB_POST_NO = #{ selectJobPostNo }
	</select>
	
	<select id="selectDeteildeJpSkills" parameterType="_int" resultMap="resultJpSkills">
		SELECT /* com.itsme.letitgo.personal.recruit.jobposting.model.mapper.SelectJobPostingMapper#selectDeteildeJpSkills(); */
			   RS.JOB_POST_NO
			 , S.SKILLS_NAME
		  FROM TBL_JOB_POSTING_REQ_SKILLS RS
		  JOIN TBL_SKILLS S ON(RS.SKILLS_NO = S.SKILLS_NO)
		 WHERE RS.JOB_POST_NO = #{ selectJobPostNo }
	</select>
	
	<!-- 공고 상세보기 들어갈때 지원완료했는지 여부를 확인하기 위한 mapper, 지원완료로 바꿔야한다. -->
	<select id="selectApplyingHistory" parameterType="com.itsme.letitgo.personal.recruit.jobposting.model.dto.SelectApplyingYnDTO" resultMap="resultApplyngYn">
		SELECT /* com.itsme.letitgo.personal.recruit.jobposting.model.mapper.SelectJobPostingMapper#selectApplyingHistory(); */
		       AH.RESUME_NO
		     , AH.JOB_POST_NO
		     , AH.JOB_POST_APPLYING_STATUS
		     , R.IN_MEM_NO
		  FROM TBL_APPLYING_HISTORY AH 
		  JOIN TBL_RESUME R ON (AH.RESUME_NO = R.RESUME_NO)
		 WHERE R.IN_MEM_NO = #{ memNo } 
		   AND AH.JOB_POST_NO = #{ jobPostNo }
		   AND AH.JOB_POST_APPLYING_STATUS = '지원완료'
	</select>
	
	<!-- 공고 지원 선택 시 회원이 보유한 이력서를 보여주기 위한 mapper -->
	<select id="selectResumeForApplying" parameterType="_int" resultMap="resultResumeForApplying">
		SELECT /* com.itsme.letitgo.personal.recruit.jobposting.model.mapper.SelectJobPostingMapper#selectResumeForApplying(); */
			   R.IN_MEM_NO
			 , R.RESUME_NO
			 , R.RESUME_WRITE_DATE
			 , R.RESUME_SCOUT_STATUS
			 , R.RESUME_TITLE
		  FROM TBL_RESUME R
		 WHERE R.IN_MEM_NO = #{ inMemNo }
	</select>
	
	<!-- 북마크 등록 mapper -->
	<insert id="insertBookmark" parameterType="_int">
		INSERT /* com.itsme.letitgo.personal.recruit.jobposting.model.mapper.SelectJobPostingMapper#insertBookmark(); */
		  INTO TBL_BOOKMARK B
		(
		  B.IN_MEM_NO, B.JOB_POST_NO
		)
		VALUES
		(
		  3, #{ jobPostNo }
		)
	</insert>
	
	<!-- 북마크 리스트 조회 -->
	<select id="selectBookmark" parameterType="_int" resultMap="bookmarkResultMap">
		SELECT /* com.itsme.letitgo.personal.recruit.jobposting.model.mapper.SelectJobPostingMapper#selectBookmark(); */
		       B.IN_MEM_NO
		     , B.JOB_POST_NO
             , C.CO_COM_NAME
		  FROM TBL_BOOKMARK B
		  JOIN TBL_JOB_POSTING J ON (B.JOB_POST_NO = J.JOB_POST_NO)
		  JOIN TBL_MEMBER M ON (J.CO_MEM_NO = M.MEM_NO)
		  JOIN TBL_CO_MEMBER_ADD_INFO C ON (M.MEM_NO = C.CO_MEM_NO)
		 WHERE B.IN_MEM_NO = #{ inMemNo }
	</select>
	
	<!-- 북마크 삭제 -->
	<delete id="deleteBookmark" parameterType="com.itsme.letitgo.personal.recruit.jobposting.model.dto.BookmarkDTO">
		DELETE /* com.itsme.letitgo.personal.recruit.jobposting.model.mapper.SelectJobPostingMapper#deleteBookmark(); */
		  FROM TBL_BOOKMARK
		 WHERE IN_MEM_NO = #{ inMemNo }
		   AND JOB_POST_NO = #{ jobPostNo }
	</delete>

	<select id="selectTitleFilePath" resultType="string">
		SELECT
		       SUBSTR(B.MEM_FILE_PATH,21)
		  FROM TBL_JOB_POSTING A
		  JOIN TBL_CO_MEMBER_ADD_INFO B ON (A.CO_MEM_NO = B.CO_MEM_NO)
		  LEFT JOIN TBL_ATTACHMENT B ON(A.CO_MEM_NO = B.MEM_NO)
		 WHERE A.JOB_POST_NO = #{ JobPostNo }
		   AND B.MEM_FILE_KINDS = '대표이미지'
	</select>
	
	<select id="selectLogoFilePath" resultType="string">
		SELECT
		       SUBSTR(B.MEM_FILE_PATH,21)
		  FROM TBL_JOB_POSTING A
		  JOIN TBL_CO_MEMBER_ADD_INFO B ON (A.CO_MEM_NO = B.CO_MEM_NO)
		  LEFT JOIN TBL_ATTACHMENT B ON(A.CO_MEM_NO = B.MEM_NO)
		 WHERE A.JOB_POST_NO = #{ JobPostNo }
		   AND B.MEM_FILE_KINDS = '프로필사진'
	</select>

	
	
</mapper>